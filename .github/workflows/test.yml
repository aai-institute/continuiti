name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "release/*", "dev"]

env:
  USE_MPS_BACKEND: False

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.9", "3.10", "3.11"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache venv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}

      - name: Setup venv
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          . ./.venv/bin/activate
          pip install -e .[testing]
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Activate venv
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: List dependencies
        run: |
          python -m pip list

      - name: Run pytest
        run: |
          pytest -v

      - name: Test notebooks
        run: |
          pytest --nbmake examples/

  # upload code coverage report
  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Cache venv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-3.11-venv-${{ hashFiles('pyproject.toml') }}

      - name: Setup venv
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          . ./.venv/bin/activate
          pip install -e .[testing]
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Activate venv
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Install pytest-cov
        run: |
          pip install pytest-cov[toml]

      - name: Run tests and collect coverage
        run: pytest --cov src

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = continuity
description = Mapping continuous functions with neural networks.
author = Samuel Burbulla
author_email = s.burbulla@appliedai-institute.de
license = GNU LGPL v3.0
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/aai-institute/continuity.git
# Add here related links, for example:
project_urls =
    Documentation = https://aai-institute.github.io/continuity/
    Source = https://github.com/aai-institute/continuity.git

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Alpha
    Programming Language :: Python
    License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Physics


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    black           # code formatting
    flake8          # code analysis
    isort           # import sorting

    # --------- loggers --------- #
    # wandb
    # neptune-client
    # mlflow
    # comet-ml
    tensorboard

    # --------- linters --------- #
    pre-commit      # hooks for applying linters on commit
    pudb            # debugger
    pytest          # tests

    # --------- others --------- #
    python-dotenv   # loading env variables from .env file
    rich            # beautiful text formatting in terminal
    sh              # for running bash commands in some tests
    # dvc             # data version control

    # --------- dependencies --------- #
    torch==2.1.0
    dadaptation==3.1
    matplotlib
    pandas


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install ML-Pipeline-Template[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov


[tool:pytest]
testpaths = tests/
log_cli = True
markers =
    slow
addopts =
    --durations=0
    --strict-markers
    --doctest-modules
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning


[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel


[flake8]
max_line_length = 99
show_source = True
format = pylint
ignore =
    # Module imported but unused
    F401
    # Line break occurred after a binary operator
    W504
    # Local variable name is assigned to but never used
    F841
    # Line too long
    E501
    # White space before ':'
    E203
exclude =
    .git
    __pycache__
    datasets/*
    tests/*
    notebooks/*
    logs/*
    .tox
    build
    dist
    .eggs
    docs/conf.py
    venv


[isort]
line_length = 99
profile = black
filter_files = True


[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.1
package = continuity
extensions =
    dsproject
    no_skeleton
    pre_commit
